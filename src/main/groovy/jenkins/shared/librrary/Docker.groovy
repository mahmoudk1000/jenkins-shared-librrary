#!/usr/bin/env groovy
/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package jenkins.shared.librrary

class Docker implements Serializable {
    def script

    Docker(script) {
        this.script = script
    }

    def dockerLogin() {
        script.withCredentials([script.usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'PASS', usernameVaribale: 'USER')]) {
            script.sh "echo $script.PASS | docker login -u $script.USER --password-stdin"
        }
    }

    def customDockerLogin(String username, String password, String registryUrl) {
        script.echo "Logging in to Docker registry..."
    
        script.sh "echo $password | docker login -u $username -password-stdin $registryUrl"
    }

    def buildDockerImage(String imageName, String dockerfilePath = 'Dockerfile', Map<String, String> buildArgs) {
            script.echo "Build docker image..."

            def buildArgsString = buildArgs.collect { key, value -> "--build-arg ${key}=${value}" }.join(' ')
            script.sh "docker build -t $imageName -f $dockerfilePath $buildArgsString ."
    }

    def dockerPushImage(String imageName) {
        script.echo "Push image to registry..."
        
        script.sh "docker push $imageName"
    }

    def runDockerContainer(String containerName, String containerTag, List<String> options = []) {
        script.echo "Running Docker container..."
        
        def optionsString = options.join(' ')
        script.sh "docker run -d $options $containerName:$containerTag"
    }
}
